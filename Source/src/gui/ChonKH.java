/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import daoImpl.ICustomerImpl;
import entities.Customer;
import java.util.ArrayList;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ICHIGEKI
 */
public class ChonKH extends javax.swing.JFrame {

    public int count, max, from;
    public String form;
    public static ChonKH it;

    /**
     * Creates new form FSSelectCustomer
     */
    public ChonKH() {
        initComponents();
        initData();
        it = this;
        count = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtGovernmentID = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        spCustomers = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        txtCustomer = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        grCus = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grSelect = new javax.swing.JTable();
        btnCancel = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "CHỌN KHÁCH HÀNG"));

        jLabel2.setText("SỐ CMT");

        btnOk.setText("OK");
        btnOk.setPreferredSize(null);
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnAdd.setText("THÊM");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel4.setText("KHÁCH HÀNG");

        spCustomers.setEnabled(false);

        jLabel5.setText("KHÁCH HÀNG");

        txtCustomer.setMaximumSize(new java.awt.Dimension(300, 20));

        btnSearch.setText("TÌM");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnNew.setText("THÊM MỚI");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "KHÁCH HÀNG"));

        grCus.setAutoCreateRowSorter(true);
        grCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TÊN KH", "SỐ CMT", "SĐT", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grCus.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(grCus);
        if (grCus.getColumnModel().getColumnCount() > 0) {
            grCus.getColumnModel().getColumn(3).setMinWidth(0);
            grCus.getColumnModel().getColumn(3).setPreferredWidth(0);
            grCus.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 363, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "ĐÃ CHỌN"));

        grSelect.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TÊN KH", "SỐ CMT", "SĐT", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grSelect.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(grSelect);
        if (grSelect.getColumnModel().getColumnCount() > 0) {
            grSelect.getColumnModel().getColumn(3).setMinWidth(0);
            grSelect.getColumnModel().getColumn(3).setPreferredWidth(0);
            grSelect.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
        );

        btnCancel.setText("HỦY");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnRemove.setText("XÓA");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(86, 86, 86)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtGovernmentID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(spCustomers, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtGovernmentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnAdd)
                    .addComponent(btnNew)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel)
                    .addComponent(btnRemove))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        ThemKhachHang fs = new ThemKhachHang();
        fs.setLocationRelativeTo(this);
        fs.setVisible(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String cus = txtCustomer.getText();
        String id = txtGovernmentID.getText();
        if (cus.trim().length() == 0 && id.trim().length() == 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập ít nhất một điều khoản");
            txtCustomer.requestFocus();
            return;
        }
        ArrayList condi = new ArrayList();
        if (cus.trim().length() != 0) {
            if (!Pattern.compile("[[A-Za-z]+\\ *]{0,20}", Pattern.CASE_INSENSITIVE).matcher(cus).matches()) {
                JOptionPane.showMessageDialog(null, "Xin vui lòng nhập vào một tên hợp lệ!");
                txtCustomer.requestFocus();
                return;
            }
            condi.add(RowFilter.regexFilter("(?i)" + cus, 0));
        }
        if (id.trim().length() != 0) {
            if (!Pattern.compile("\\d{0,20}", Pattern.CASE_INSENSITIVE).matcher(id).matches()) {
                JOptionPane.showMessageDialog(null, "Số CMT phải là chữ số");
                txtGovernmentID.requestFocus();
                return;
            }
            condi.add(RowFilter.regexFilter(id, 1));
        }
        rs.setRowFilter(RowFilter.andFilter(condi));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (count < max) {
            if (grCus.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một khách hàng trước khi thêm.");
                return;
            }
            for (int i = 0; i < grSelect.getRowCount(); i++) {
                if (grCus.getValueAt(grCus.getSelectedRow(), 1) == grSelect.getValueAt(i, 1)) {
                    JOptionPane.showMessageDialog(this, "Không thể thêm khách hàng này.");
                    return;
                }
            }
            Vector v = new Vector();
            v.add(grCus.getValueAt(grCus.getSelectedRow(), 0));
            v.add(grCus.getValueAt(grCus.getSelectedRow(), 1));
            v.add(grCus.getValueAt(grCus.getSelectedRow(), 2));
            v.add(grCus.getValueAt(grCus.getSelectedRow(), 3));
            model2.addRow(v);
            for (int i = 0; i < model1.getRowCount(); i++) {
                if (model1.getValueAt(i, 0) == v.get(0)) {
                    model1.removeRow(i);
                }
            }
            btnRemove.setEnabled(true);
            if (grCus.getRowCount() == 0) {
                btnAdd.setEnabled(false);
            }
            spCustomers.setValue(++count);
            if (count == max) {
                dis();
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if (grSelect.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một khách hàng trước khi gỡ bỏ.");
            return;
        }
        Vector v = new Vector();
        v.add(grSelect.getValueAt(grSelect.getSelectedRow(), 0));
        v.add(grSelect.getValueAt(grSelect.getSelectedRow(), 1));
        v.add(grSelect.getValueAt(grSelect.getSelectedRow(), 2));
        v.add(grSelect.getValueAt(grSelect.getSelectedRow(), 3));
        model1.addRow(v);
        model2.removeRow(grSelect.getSelectedRow());
        btnAdd.setEnabled(true);
        btnNew.setEnabled(true);
        if (grSelect.getRowCount() == 0) {
            btnRemove.setEnabled(false);
        }
        spCustomers.setValue(--count);
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (grSelect.getRowCount() != 0) {
            if (form.equals("recep")) {
                if (from == 1) {
                    DatPhongNgay.it.tempRecep.setCusGroupID((int) grSelect.getValueAt(0, 3));
                }
                if (from == 0) {
                    String s = String.valueOf(grSelect.getValueAt(0, 3));
                    for (int i = 1; i < grSelect.getRowCount(); i++) {
                        s = s + " " + grSelect.getValueAt(i, 3);
                    }
                    DatPhongNgay.it.tempRecep.setCustomer(s);
                }
                DatPhongNgay.it.fillData(DatPhongNgay.it.tempRecep);
                this.dispose();
            }
            if (form.equals("reser")) {
                if (from == 1) {
                    DatTruocP.it.tempRe.setCustomerID((int) grSelect.getValueAt(0, 3));
                }
                DatTruocP.it.fillData(DatTruocP.it.tempRe);
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không thể gửi khi danh sách đã chọn trống.");
        }

    }//GEN-LAST:event_btnOkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChonKH().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JTable grCus;
    private javax.swing.JTable grSelect;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner spCustomers;
    private javax.swing.JTextField txtCustomer;
    private javax.swing.JTextField txtGovernmentID;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel model1, model2;
    TableRowSorter<TableModel> rs;

    private void initData() {
        model1 = (DefaultTableModel) grCus.getModel();
        model2 = (DefaultTableModel) grSelect.getModel();
        rs = (TableRowSorter<TableModel>) grCus.getRowSorter();
        for (Customer c : new ICustomerImpl().getList()) {
            Vector v = new Vector();
            v.add(c.getCusName());
            v.add(c.getGovernmentID());
            v.add(c.getPhone());
            v.add(c.getCustomerID());
            model1.addRow(v);
        }
        from = 0;
    }

    public void setMax(int i) {
        this.max = i;
    }

    public void dis() {
        btnAdd.setEnabled(false);
        btnNew.setEnabled(false);
    }

    public void setFrom(int i, String j) {
        form = j;
        from = i;
    }
}
