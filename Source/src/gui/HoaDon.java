/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import daoImpl.ICustomerImpl;
import entities.Reception;
import entities.Payment;
import entities.Room;
import entities.RoomType;
import entities.Drink;
import entities.Food;
import entities._Services;
import daoImpl.IDrinkImpl;
import daoImpl.IFoodImpl;
import daoImpl.IPaymentIpml;
import daoImpl.IReceptionImpl;
import daoImpl.IRoomImpl;
import daoImpl.IRoomTypeImpl;
import daoImpl.I_ServicesImpl;
import entities.Customer;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author ICHIGEKI
 */
public class HoaDon extends javax.swing.JFrame {

    /**
     * Creates new form HoaDon
     */
    Reception r;
    int index, amount;
    int prRoom = 0, prService = 0, prFood = 0, prDrink = 0, roCount = 0;
    String typeroom;
    String namecus;
    IRoomImpl iroi = new IRoomImpl();
    IRoomTypeImpl irti = new IRoomTypeImpl();
    IReceptionImpl iri = new IReceptionImpl();
    IFoodImpl ifi = new IFoodImpl();
    I_ServicesImpl isi = new I_ServicesImpl();
    IDrinkImpl idi = new IDrinkImpl();
    ICustomerImpl ici = new ICustomerImpl();
    String[] serv;
    String[] fo;
    String[] dri;

    public HoaDon() {
        initComponents();
        initPay();
    }

    public HoaDon(Reception r, int index) {
        initComponents();
        this.r = r;
        this.index = index;
        initPay();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbCusName = new javax.swing.JLabel();
        lbRooms = new javax.swing.JLabel();
        lbRoomType = new javax.swing.JLabel();
        lbAmount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "HÓA ĐƠN"));

        jLabel1.setText("PHÒNG");

        jLabel2.setText("KHÁCH HÀNG");

        jLabel3.setText("Số tiền");

        jLabel4.setText("LOẠI PHÒNG");

        jButton1.setText("Pay");
        jButton1.setMaximumSize(new java.awt.Dimension(90, 23));
        jButton1.setMinimumSize(new java.awt.Dimension(90, 23));
        jButton1.setPreferredSize(new java.awt.Dimension(90, 23));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("hủy");
        jButton2.setMaximumSize(new java.awt.Dimension(90, 23));
        jButton2.setMinimumSize(new java.awt.Dimension(90, 23));
        jButton2.setPreferredSize(new java.awt.Dimension(90, 23));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(133, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(124, 124, 124)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbAmount)
                    .addComponent(lbRoomType)
                    .addComponent(lbRooms)
                    .addComponent(lbCusName))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbCusName))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbRooms))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lbRoomType))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbAmount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 105, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        IPaymentIpml ipi = new IPaymentIpml();
        int payId = 1;
        int amout = prDrink + prFood + prRoom + prService;
        int receptionId = r.getReceptionID();
        int id = r.getCusGroupID();
        Date date = new Date();
        Payment p = new Payment(amout, payId, amout, receptionId, date);
        if (ipi.insertTan(p)) {
            JOptionPane.showMessageDialog(null, "Completed");
            iri.updateTan(r);
            this.dispose();
            DSThanhToan.pm.model.setRowCount(0);
            DSThanhToan.pm.initModel();
            DSThanhToan.pm.sort();
        } else {
            JOptionPane.showMessageDialog(null, "Failed");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDon().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lbAmount;
    private javax.swing.JLabel lbCusName;
    private javax.swing.JLabel lbRoomType;
    private javax.swing.JLabel lbRooms;
    // End of variables declaration//GEN-END:variables

    private void initPay() {

        long date = (r.getCheckoutDate().getTime() - r.getCheckinDate().getTime()) / 1000 / 60 / 60 / 24;
        int d = (int) (Math.ceil(date) + 1);

        if (index == 0) {
            serv = r.getServices().split(" ");
            fo = r.getFoods().split(" ");
            dri = r.getDrinks().split(" ");
            for (Room room : iroi.getListTan()) {
                if (room.getRoomID() == r.getRoomID()) {
                    for (RoomType roomtype : irti.getListTan()) {
                        if (roomtype.getRoomTypeID() == room.getRoomTypeID()) {
                            prRoom = roomtype.getRoomPrice() * d;
                            typeroom = roomtype.getRoomTypeName();
                        }
                    }
                }
            }
            for (_Services service : isi.getListTan()) {
                for (int a = 0; a < serv.length; a++) {
                    if (service.getServiceID() == Integer.parseInt(serv[a])) {
                        prService += service.getServicePrice();
                    }
                }
            }
            for (Food food : ifi.getListTan()) {
                for (int a = 0; a < fo.length; a++) {
                    if (food.getFoodID() == Integer.parseInt(fo[a])) {
                        prFood += food.getFoodPrice();
                    }
                }
            }
            for (Drink drink : idi.getListTan()) {
                for (int a = 0; a < dri.length; a++) {
                    if (drink.getDrinkID() == Integer.parseInt(dri[a])) {
                        prDrink += drink.getDrinkPrice();
                    }
                }
            }
            for (Customer cus : ici.getListTan()) {
                if (cus.getCustomerID() == r.getCusGroupID()) {
                    namecus = cus.getCusName();
                }
            }

            lbRooms.setText("1");

        } else {
            for (Reception rep : iri.getListTan()) {
                if (rep.getCusGroupID() == r.getCusGroupID()) {
                    Reception rGr = rep;
                    roCount++;
                    serv = rGr.getServices().split(" ");
                    fo = rGr.getFoods().split(" ");
                    dri = rGr.getDrinks().split(" ");

                    for (Room room : iroi.getListTan()) {
                        if (room.getRoomID() == rGr.getRoomID()) {
                            for (RoomType roomtype : irti.getListTan()) {
                                if (roomtype.getRoomTypeID() == room.getRoomTypeID()) {
                                    prRoom += (roomtype.getRoomPrice() * d);
                                    typeroom = roomtype.getRoomTypeName();
                                }
                            }
                        }
                    }
                    for (_Services service : isi.getListTan()) {
                        for (int a = 0; a < serv.length; a++) {
                            if (service.getServiceID() == Integer.parseInt(serv[a])) {
                                prService += service.getServicePrice();
                            }
                        }
                    }
                    for (Food food : ifi.getListTan()) {
                        for (int a = 0; a < fo.length; a++) {
                            if (food.getFoodID() == Integer.parseInt(fo[a])) {
                                prFood += food.getFoodPrice();
                            }
                        }
                    }
                    for (Drink drink : idi.getListTan()) {
                        for (int a = 0; a < dri.length; a++) {
                            if (drink.getDrinkID() == Integer.parseInt(dri[a])) {
                                prDrink += drink.getDrinkPrice();
                            }
                        }
                    }
                    for (Customer cus : ici.getListTan()) {
                        if (cus.getCustomerID() == rGr.getCusGroupID()) {
                            namecus = cus.getCusName();
                        }
                    }
                    lbRooms.setText(String.valueOf(roCount));
                }
            }
        }
        amount += prDrink + prFood + prRoom + prService;
        lbCusName.setText(namecus);
        lbRoomType.setText(typeroom);
        lbAmount.setText(String.valueOf(amount));
    }
}
