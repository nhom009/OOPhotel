/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import bill.VCustomer;
import bill.VReception;
import daoImpl.ICustomerImpl;
import daoImpl.IReceptionImpl;
import daoImpl.IRoomImpl;
import entities.Customer;
import entities.Reception;
import entities.Room;
import entities._Account;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author User
 */
public class DatPhongNgay extends javax.swing.JFrame {

    /**
     * Creates new form Reservation
     */
    public static DatPhongNgay it;
    String deputy, cusName;
    int roNo;
    String[] cus;

    public DatPhongNgay() {
        initComponents();
        it = this;
        initData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnSelectRoom = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtRoom = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtCusGroup = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        btnSelectCus = new javax.swing.JButton();
        btnSelectCusGroup = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtaCustomers = new javax.swing.JTextArea();
        dcsExpectedCheckOut = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        GrViewReception = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnBack = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtRoomS = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(810, 32767));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "PHÒNG ĐẶT NGAY"));
        jPanel5.setMaximumSize(new java.awt.Dimension(656, 32767));
        jPanel5.setPreferredSize(new java.awt.Dimension(650, 242));

        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("KHÁCH HÀNG");

        btnSelectRoom.setText("PHÒNG");
        btnSelectRoom.setEnabled(false);
        btnSelectRoom.setPreferredSize(new java.awt.Dimension(115, 23));
        btnSelectRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectRoomActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("PHÒNG");

        txtRoom.setEditable(false);
        txtRoom.setPreferredSize(new java.awt.Dimension(297, 20));

        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("LỄ TÂN");

        txtCusGroup.setEditable(false);
        txtCusGroup.setPreferredSize(new java.awt.Dimension(297, 20));

        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("NGÀY TRẢ");

        btnSelectCus.setText("CHỌN KHÁCH");
        btnSelectCus.setEnabled(false);
        btnSelectCus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectCusActionPerformed(evt);
            }
        });

        btnSelectCusGroup.setText("CHỌN KHÁCH");
        btnSelectCusGroup.setEnabled(false);
        btnSelectCusGroup.setPreferredSize(new java.awt.Dimension(115, 23));
        btnSelectCusGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectCusGroupActionPerformed(evt);
            }
        });

        txtaCustomers.setEditable(false);
        txtaCustomers.setColumns(20);
        txtaCustomers.setRows(5);
        txtaCustomers.setPreferredSize(new java.awt.Dimension(297, 94));
        jScrollPane2.setViewportView(txtaCustomers);

        dcsExpectedCheckOut.setPreferredSize(new java.awt.Dimension(297, 20));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtCusGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSelectCusGroup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSelectCus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSelectRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(dcsExpectedCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 96, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCusGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelectCusGroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(btnSelectCus))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(btnSelectRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(dcsExpectedCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel2.setMaximumSize(new java.awt.Dimension(656, 32767));
        jPanel2.setPreferredSize(new java.awt.Dimension(650, 151));

        GrViewReception.setAutoCreateRowSorter(true);
        GrViewReception.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ĐẠI DIỆN", "PHÒNG", "Check in", "NGÀY TRẢ", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GrViewReception.getTableHeader().setReorderingAllowed(false);
        GrViewReception.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GrViewReceptionMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(GrViewReception);
        if (GrViewReception.getColumnModel().getColumnCount() > 0) {
            GrViewReception.getColumnModel().getColumn(4).setMinWidth(0);
            GrViewReception.getColumnModel().getColumn(4).setPreferredWidth(0);
            GrViewReception.getColumnModel().getColumn(4).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
        );

        jPanel6.setBackground(new java.awt.Color(178, 208, 254));

        btnBack.setBackground(new java.awt.Color(255, 255, 51));
        btnBack.setText("BACK");
        btnBack.setPreferredSize(new java.awt.Dimension(90, 43));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(255, 255, 51));
        btnReset.setText("CẬP NHẬT");
        btnReset.setPreferredSize(new java.awt.Dimension(90, 43));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(255, 255, 51));
        btnUpdate.setText("SỬA");
        btnUpdate.setPreferredSize(new java.awt.Dimension(90, 43));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(255, 255, 51));
        btnAdd.setText("THÊM");
        btnAdd.setPreferredSize(new java.awt.Dimension(90, 43));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(255, 255, 51));
        btnSearch.setText("TÌM KIẾM");
        btnSearch.setPreferredSize(new java.awt.Dimension(90, 43));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 51));
        btnDelete.setText("XÓA");
        btnDelete.setPreferredSize(new java.awt.Dimension(90, 43));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "TÌM"));
        jPanel3.setMaximumSize(new java.awt.Dimension(656, 32767));
        jPanel3.setPreferredSize(new java.awt.Dimension(650, 65));

        jLabel4.setText("PHÒNG");

        txtRoomS.setMaximumSize(new java.awt.Dimension(300, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(txtRoomS, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(158, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtRoomS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectCusGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectCusGroupActionPerformed
        if (!btnSearch.isEnabled() && btnUpdate.isEnabled()) {
            if (GrViewReception.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn lễ tân trước khi chọn khách hàng.");
                return;
            }
        }
        ChonKH sc = new ChonKH();
        sc.setFrom(1, "recep");
        sc.setMax(1);
        sc.setLocationRelativeTo(this);
        sc.setVisible(true);
    }//GEN-LAST:event_btnSelectCusGroupActionPerformed

    private void btnSelectCusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectCusActionPerformed
        if (!btnSearch.isEnabled() && btnUpdate.isEnabled()) {
            if (GrViewReception.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn lễ tân trước khi chọn khách hàng.");
                return;
            }
        }
        ChonKH sc = new ChonKH();
        sc.setFrom(0, "recep");
        sc.setMax(5);
        sc.setLocationRelativeTo(this);
        sc.setVisible(true);
    }//GEN-LAST:event_btnSelectCusActionPerformed

    private void btnSelectRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectRoomActionPerformed
        if (!btnSearch.isEnabled() && btnUpdate.isEnabled()) {
            if (GrViewReception.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn lễ tân trước khi chọn phòng");
                return;
            }
        }
        ChonPhong sr = new ChonPhong();
        sr.setFrom(1, "recep");
        sr.setMax(1);
        sr.setDatex(new Date(), dcsExpectedCheckOut.getDate());
        sr.setLocationRelativeTo(this);
        sr.setVisible(true);
    }//GEN-LAST:event_btnSelectRoomActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtRoomS.setText(null);
        txtCusGroup.setText(null);
        txtaCustomers.setText(null);
        txtRoom.setText(null);
        dcsExpectedCheckOut.setDate(null);
        rs.setRowFilter(RowFilter.regexFilter("", 1));
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        if (btnStt) {
            txtRoomS.setText(null);
            txtCusGroup.setText(null);
            txtaCustomers.setText(null);
            txtRoom.setText(null);
            rs.setRowFilter(RowFilter.regexFilter("", 1));
            unlockBtn();
            btnStt = false;
        } else {
            GDNhanVien f = new GDNhanVien();
            f.setAccount(acc);
            f.setLocationRelativeTo(this);
            f.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String room = txtRoomS.getText().trim();
        if (room.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Hãy nhập số phòng");
            txtRoomS.requestFocus();
        } else if (!Pattern.compile("\\d+", Pattern.CASE_INSENSITIVE).matcher(room).matches()) {
            JOptionPane.showMessageDialog(null, "Số phòng phải là chữ số");
            txtRoomS.requestFocus();
        } else {
            rs.setRowFilter(RowFilter.regexFilter(room, 1));
        }

    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (GrViewReception.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Chọn lễ tân để xóa");
            return;
        }
        if (JOptionPane.showConfirmDialog(null, "Bạn có muốn xóa lễ tân này", "đồng ý", JOptionPane.YES_NO_OPTION) == 0) {
            new IReceptionImpl().delete((Integer) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 4));
            JOptionPane.showMessageDialog(null, "Xóa thành công");
            model.setRowCount(0);
            initData();
        } else {
            return;
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void GrViewReceptionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_GrViewReceptionMouseClicked
        if ((!btnSearch.isEnabled()) && btnUpdate.isEnabled()) {
            fillData();
            String deputy = (String) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 0);
            int room = (int) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 1);
            for (Reception r : recepList) {
                if (r.getReceptionID() == (int) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 4)) {
                    tempRecep = r;
                }
            }
        }
    }//GEN-LAST:event_GrViewReceptionMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (btnStt) {
            if (GrViewReception.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(null, "Chọn lễ tân để cập nhật");
                return;
            }
            if (txtCusGroup.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Chọn đại diện");
                return;
            }
            if (txtaCustomers.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Chọn khách hàng");
                return;
            }
            if (txtRoom.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Chọn phòng");
                return;
            }
            if (dcsExpectedCheckOut.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Chọn ngày trả phòng");
                dcsExpectedCheckOut.setDate(null);
                return;
            }
            tempRecep.setExpectedCheckoutDate(dcsExpectedCheckOut.getDate());
            if (new IReceptionImpl().update(tempRecep)) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                model.setRowCount(0);
                initData();
            } else {
                JOptionPane.showMessageDialog(null, "Cập nhật thất bại");
            }
            unlockBtn();
            btnResetActionPerformed(evt);
            btnStt = false;
        } else {
            tempRecep = new Reception();
            lockBtn(btnUpdate);
            btnStt = true;

        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (btnStt) {
            if (txtCusGroup.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "chọn đại diện");
                return;
            }
            if (txtaCustomers.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "chọn khách hàng");
                return;
            }
            if (txtRoom.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Chọn phòng");
                return;
            }
            if (dcsExpectedCheckOut.getDate() == null) {
                JOptionPane.showMessageDialog(this, "CChọn ngày trả phòng");
                dcsExpectedCheckOut.setDate(null);
                return;
            }
            tempRecep.setExpectedCheckoutDate(dcsExpectedCheckOut.getDate());
            if (new IReceptionImpl().insert(tempRecep)) {
                view(tempRecep);
                JOptionPane.showMessageDialog(null, "Chèn thành công");
                model.setRowCount(0);
                initData();
                report();
            } else {
                JOptionPane.showMessageDialog(null, "Chèn ko thành công");
            }
            unlockBtn();
            btnResetActionPerformed(evt);
            btnStt = false;
            try {
                KTDS.it.respon(getRoomNo(tempRecep.getRoomID()));
            } catch (Exception e) {
            }
        } else {
            tempRecep = new Reception();
            lockBtn(btnAdd);
            btnStt = true;
        }
    }//GEN-LAST:event_btnAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DatPhongNgay().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable GrViewReception;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSelectCus;
    private javax.swing.JButton btnSelectCusGroup;
    private javax.swing.JButton btnSelectRoom;
    private javax.swing.JButton btnUpdate;
    private com.toedter.calendar.JDateChooser dcsExpectedCheckOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtCusGroup;
    private javax.swing.JTextField txtRoom;
    private javax.swing.JTextField txtRoomS;
    private javax.swing.JTextArea txtaCustomers;
    // End of variables declaration//GEN-END:variables
    ArrayList<Reception> recepList;
    DefaultTableModel model;
    TableRowSorter<TableModel> rs;
    Reception tempRecep;
    boolean btnStt;
    _Account acc = new _Account();

    public void setAccount(_Account aa) {
        acc = aa;
    }

    public void initData() {
        model = (DefaultTableModel) GrViewReception.getModel();
        rs = (TableRowSorter<TableModel>) GrViewReception.getRowSorter();
        recepList = new IReceptionImpl().getList();
        model.setRowCount(0);
        for (Reception r : recepList) {
            Vector v = new Vector();
            v.add(getCusName(r.getCusGroupID()));
            v.add(getRoomNo(r.getRoomID()));
            v.add(r.getCheckinDate());
            v.add(r.getExpectedCheckoutDate());
            v.add(r.getReceptionID());
            model.addRow(v);
        }
    }

    public String getCusName(int i) {
        for (Customer c : new ICustomerImpl().getList()) {
            if (c.getCustomerID() == i) {
                return c.getCusName();
            }
        }
        return null;
    }

    public int getRoomNo(int i) {
        for (Room c : new IRoomImpl().getList()) {
            if (c.getRoomID() == i) {
                return c.getRoomNumber();
            }
        }
        return -1;
    }

    public void lockBtn(JButton a) {
        if (a == btnAdd) {
            btnSearch.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnDelete.setEnabled(false);
            btnSelectCusGroup.setEnabled(true);
            btnSelectCus.setEnabled(true);
            btnSelectRoom.setEnabled(true);
            btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/btnSave.png")));
            btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnCancel.png")));
        }
        if (a == btnUpdate) {
            btnSearch.setEnabled(false);
            btnAdd.setEnabled(false);
            btnDelete.setEnabled(false);
            btnSelectCus.setEnabled(true);
            btnSelectRoom.setEnabled(true);
            btnUpdate.setIcon(new ImageIcon(getClass().getResource("/image/btnSave.png")));
            btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnCancel.png")));
        }
    }

    public void unlockBtn() {
        btnSearch.setEnabled(true);
        btnUpdate.setEnabled(true);
        btnDelete.setEnabled(true);
        btnAdd.setEnabled(true);
        btnSelectCusGroup.setEnabled(false);
        btnSelectCus.setEnabled(false);
        btnSelectRoom.setEnabled(false);
        btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/btnAdd.png")));
        btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
        btnUpdate.setIcon(new ImageIcon(getClass().getResource("/image/btnUpdate.png")));
    }

    public void fillData() {
        String deputy = (String) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 0);
        int room = (int) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 1);
        int id = (int) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 4);
        for (Reception re : recepList) {
            if (re.getReceptionID() == id) {
                String[] cus = re.getCustomer().split(" ");
                if (cus.length == 1) {
                    txtaCustomers.setText(getCusName(Integer.parseInt(cus[0])));
                } else {
                    txtaCustomers.setText(getCusName(Integer.parseInt(cus[0])));
                    for (int i = 1; i < cus.length; i++) {
                        txtaCustomers.setText(String.format("%s\n%s", txtaCustomers.getText(), getCusName(Integer.parseInt(cus[i]))));
                    }
                }
            }
        }
        txtCusGroup.setText((String) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 0));
        txtRoom.setText(String.valueOf(GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 1)));
        dcsExpectedCheckOut.setDate((Date) GrViewReception.getValueAt(GrViewReception.getSelectedRow(), 3));
    }

    public void fillData(Reception r) {
        if (r.getCustomer() != null) {
            String[] cus = r.getCustomer().split(" ");
            txtaCustomers.setText(getCusName(Integer.parseInt(cus[0])));
            for (int i = 1; i < cus.length; i++) {
                txtaCustomers.setText(String.format("%s\n%s", txtaCustomers.getText(), getCusName(Integer.parseInt(cus[i]))));
            }
        }
        txtCusGroup.setText(getCusName(r.getCusGroupID()));
        txtRoom.setText(getRoomNo(r.getRoomID()) == -1 ? "" : String.valueOf(getRoomNo(r.getRoomID())));
        dcsExpectedCheckOut.setDate(r.getExpectedCheckoutDate());
    }

    public void addFromReser(int deputy, int room, Date eCheckout, int reserID) {
        tempRecep = new Reception();
        lockBtn(btnAdd);
        btnStt = true;
        btnSelectRoom.setEnabled(false);
        btnSelectCusGroup.setEnabled(false);
        dcsExpectedCheckOut.setEnabled(false);
        tempRecep.setCusGroupID(deputy);
        tempRecep.setRoomID(room);
        tempRecep.setExpectedCheckoutDate(eCheckout);
        tempRecep.setReservationID(reserID);
        fillData(tempRecep);
    }

    public void view(Reception r) {
        ICustomerImpl ici = new ICustomerImpl();
        for (Customer c : ici.getList()) {
            if (c.getCustomerID() == r.getCusGroupID()) {
                deputy = c.getCusName();
            }
        }
        IRoomImpl iroi = new IRoomImpl();
        for (Room ro : iroi.getList()) {
            if (ro.getRoomID() == r.getRoomID()) {
                roNo = ro.getRoomNumber();
            }
        }
        cus = r.getCustomer().split(" ");

    }

    public Collection reception() {
        Vector v = new Vector();
        v.add(new VReception(deputy, roNo));
        return v;
    }

    public Collection cus() {
        ICustomerImpl ici = new ICustomerImpl();
        Vector v = new Vector();
        for (Customer c : ici.getList()) {
            for (int i = 0; i < cus.length; i++) {
                if (c.getCustomerID() == Integer.parseInt(cus[i])) {
                    cusName = c.getCusName();
                    v.add(new VCustomer(cusName));
                }
            }
        }
        return v;
    }

    private void report() {
        String s = "report/reception.jasper";
        try {
            File f = new File(s);
            FileInputStream fis = new FileInputStream(f);
            //JasperReport jr = JasperCompileManager.compileReport(fis);
            Map<String, Object> map = new HashMap<>();
            map.put("Customer", new JRBeanCollectionDataSource(cus()));
            JasperPrint jp = JasperFillManager.fillReport(fis, map, new JRBeanCollectionDataSource(reception()));
            JasperViewer jv = new JasperViewer(jp, false);
            jv.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
