package gui;

import entities.Employee;
import daoImpl.IEmployeeImpl;
import entities._Account;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

public class NhanVien extends javax.swing.JFrame {

    Employee employee;

    public NhanVien() {
        initComponents();
        initModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtEmployeeIDS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbbPosition = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtEmployeeName = new javax.swing.JTextField();
        dcsDOB = new com.toedter.calendar.JDateChooser();
        txtContact = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grView = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMaximumSize(new java.awt.Dimension(775, 32767));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "TÌM NHÂN VIÊN", 0, 0, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(51, 51, 255))); // NOI18N
        jPanel3.setPreferredSize(new java.awt.Dimension(620, 78));

        txtEmployeeIDS.setPreferredSize(new java.awt.Dimension(448, 20));

        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("MÃ NHÂN VIÊN");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(txtEmployeeIDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmployeeIDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(26, 26, 26))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "NHÂN VIÊN", 0, 0, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(51, 51, 255))); // NOI18N
        jPanel4.setPreferredSize(new java.awt.Dimension(620, 177));

        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("NGÀY SINH");

        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("SĐT");

        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("VỊ TRÍ");

        cbbPosition.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CEO", "CFO", "HRM", "CMO", "Reception", "Security Guard", "Chef", "Inspector", "Staff" }));
        cbbPosition.setToolTipText("");
        cbbPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbPositionActionPerformed(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(51, 51, 255));
        jLabel7.setText("TÊN NHÂN VIÊN");

        dcsDOB.setMaxSelectableDate(new java.util.Date(253370743302000L));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtEmployeeName)
                    .addComponent(dcsDOB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cbbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtContact))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbbPosition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(dcsDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setPreferredSize(new java.awt.Dimension(620, 0));

        grView.setAutoCreateRowSorter(true);
        grView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã NV", "Tên", "Ngày sinh", "Vị trí", "Liên hệ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grView.getTableHeader().setReorderingAllowed(false);
        grView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grViewMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(grView);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 620, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 36, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(178, 208, 254));

        btnSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnSearch.setText("TÌM KIẾM");
        btnSearch.setPreferredSize(new java.awt.Dimension(90, 43));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(51, 153, 255));
        btnAdd.setText("THÊM");
        btnAdd.setPreferredSize(new java.awt.Dimension(90, 43));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(51, 153, 255));
        btnUpdate.setText("SỬA");
        btnUpdate.setPreferredSize(new java.awt.Dimension(90, 43));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(51, 153, 255));
        btnDelete.setText("XÓA");
        btnDelete.setPreferredSize(new java.awt.Dimension(90, 43));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(51, 153, 255));
        btnReset.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnReset.setText("CẬP NHẬT");
        btnReset.setPreferredSize(new java.awt.Dimension(90, 43));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(51, 153, 255));
        btnBack.setText("BACK");
        btnBack.setPreferredSize(new java.awt.Dimension(90, 43));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String position = "";
        if (cbbPosition.getSelectedIndex() == 0) {
            position = "CEO";
        } else if (cbbPosition.getSelectedIndex() == 1) {
            position = "CFO";
        } else if (cbbPosition.getSelectedIndex() == 2) {
            position = "HRM";
        } else if (cbbPosition.getSelectedIndex() == 3) {
            position = "CMO";
        } else if (cbbPosition.getSelectedIndex() == 4) {
            position = "Reception";
        } else if (cbbPosition.getSelectedIndex() == 5) {
            position = "Security Guard";
        } else if (cbbPosition.getSelectedIndex() == 6) {
            position = "Chef";
        } else if (cbbPosition.getSelectedIndex() == 7) {
            position = "Inspector";
        } else {
            position = "Staff";
        }
        String name = txtEmployeeName.getText().trim();
        position = cbbPosition.getSelectedItem().toString();
        Date dob = dcsDOB.getDate();
        if (dob == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin của 'Mẫu nhân viên!");
            return;
        }
        Date now = new Date();
        long cdob = dob.getTime();
        long cnow = now.getTime();
        String contact = txtContact.getText().trim();
        if ((name.length() == 0) || (dob == null) || (contact.length() == 0)) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin của 'Mẫu nhân viên'!");
        } else if (name.length() > 30) {
            JOptionPane.showMessageDialog(null, "Tên nhân viên  phải nhỏ hơn hoặc bằng 30 ký tự!");
        } else if (checkName(name) == false) {
            JOptionPane.showMessageDialog(null, "Tên nhân viên không bao gồm các ký tự đặc biệt hoặc số!");
        } else if (checkNamePlus(name) == false) {
            JOptionPane.showMessageDialog(null, "Tên nhân viên chỉ chấp nhận khoảng cách giữa các từ!");
        } else if (((cnow - cdob) / 31536000000l) < 18) {
            JOptionPane.showMessageDialog(null, "Nhân viên phải trên 17 tuổi");
        } else if (checkContact(contact) == false) {
            JOptionPane.showMessageDialog(null, "Số Đt phải là chữ số");
        } else {
            Date jday1 = new Date();
            Date jday = new Date(jday1.getTime());
            Employee e = new Employee(1, name, position, contact, dob, jday);
            IEmployeeImpl ei = new IEmployeeImpl();
            if (ei.insert(e)) {
                JOptionPane.showMessageDialog(null, "CHèn thành công");
                tbGrView.setRowCount(0);
                initModel();
                txtEmployeeIDS.setText("");
                cbbPosition.setSelectedIndex(0);
                txtEmployeeName.setText("");
                txtContact.setText("");
                dcsDOB.setDate(null);
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void cbbPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbPositionActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String id = txtEmployeeIDS.getText().trim();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Chọn nhân viên để cập nhật");
            return;
        }
        int iid = Integer.parseInt(id);
        String position = "";
        if (cbbPosition.getSelectedIndex() == 0) {
            position = "CEO";
        } else if (cbbPosition.getSelectedIndex() == 1) {
            position = "CFO";
        } else if (cbbPosition.getSelectedIndex() == 2) {
            position = "HRM";
        } else if (cbbPosition.getSelectedIndex() == 3) {
            position = "CMO";
        } else if (cbbPosition.getSelectedIndex() == 4) {
            position = "Reception";
        } else if (cbbPosition.getSelectedIndex() == 5) {
            position = "Security Guard";
        } else if (cbbPosition.getSelectedIndex() == 6) {
            position = "Chef";
        } else if (cbbPosition.getSelectedIndex() == 7) {
            position = "Inspector";
        } else {
            position = "Staff";
        }
        String name = txtEmployeeName.getText().trim();
        Date dob = dcsDOB.getDate();
        Date now = new Date();
        long cdob = dob.getTime();
        long cnow = now.getTime();
        String contact = txtContact.getText().trim();
        if ((name.length() == 0) || (dob == null) || (contact.length() == 0)) {
            JOptionPane.showMessageDialog(null, "Hãy điền đầy đủ");
        } else if (name.length() > 30) {
            JOptionPane.showMessageDialog(null, "Tên nhân viên khong quá 30 kt");
        } else if (checkName(name) == false) {
            JOptionPane.showMessageDialog(null, "Tên nhân viên không bao gồm các ký tự đặc biệt hoặc số!");
        } else if (checkNamePlus(name) == false) {
            JOptionPane.showMessageDialog(null, "Tên nhân viên chỉ chấp nhận khoảng cách giữa các từ!");
        } else if (((cnow - cdob) / 31536000000l) < 18) {
            JOptionPane.showMessageDialog(null, "Nhân viên phải trên 17t");
        } else if (checkContact(contact) == false) {
            JOptionPane.showMessageDialog(null, "Số Đt phải là chữ số");
        } else {
            Employee e = new Employee(iid, name, position, contact, dob, dob);
            IEmployeeImpl ei = new IEmployeeImpl();
            if (ei.update(e)) {
                JOptionPane.showMessageDialog(null, "Cập nhật thành công");
                tbGrView.setRowCount(0);
                initModel();
                txtEmployeeIDS.setText("");
                cbbPosition.setSelectedIndex(0);
                txtEmployeeName.setText("");
                txtContact.setText("");
                dcsDOB.setDate(null);
            }
            initModel();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String id = txtEmployeeIDS.getText().trim();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Chọn nhân viên để xóa");
            return;
        }
        IEmployeeImpl ei = new IEmployeeImpl();
        if (ei.delete(id)) {
            JOptionPane.showMessageDialog(null, "Xóa thành công");
            tbGrView.setRowCount(0);
            initModel();
            txtEmployeeIDS.setText("");
            cbbPosition.setSelectedIndex(0);
            txtEmployeeName.setText("");
            txtContact.setText("");
            dcsDOB.setDate(null);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtEmployeeIDS.setText("");
        cbbPosition.setSelectedIndex(0);
        txtEmployeeName.setText("");
        txtContact.setText("");
        dcsDOB.setDate(null);
        initModel();
    }//GEN-LAST:event_btnResetActionPerformed

    private void grViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grViewMouseClicked
        int i = grView.getSelectedRow();
        if (i > -1) {
            String id = grView.getValueAt(i, 0).toString();
            String name = grView.getValueAt(i, 1).toString();
            Date dob = (Date) grView.getValueAt(i, 2);
            String position = grView.getValueAt(i, 3).toString();
            String contact = grView.getValueAt(i, 4).toString();

            txtEmployeeIDS.setText(id);
            cbbPosition.setSelectedItem(contact);
            txtEmployeeName.setText(name);
            dcsDOB.setDate(dob);
            txtContact.setText(contact);
        }
    }//GEN-LAST:event_grViewMouseClicked

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        GDAdmin f = new GDAdmin();
        f.setAccount(acc);
        f.setLocationRelativeTo(this);
        f.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String id = txtEmployeeIDS.getText().trim();
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Số CMT không đc trống");
            return;
        }
        if (checkID(id) == false) {
            JOptionPane.showMessageDialog(null, "Số CMT không khả dụng");
            return;
        }
        RowFilter r = RowFilter.regexFilter("(?i)" + id, 0);
        sorter.setRowFilter(r);
    }//GEN-LAST:event_btnSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NhanVien().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbbPosition;
    private com.toedter.calendar.JDateChooser dcsDOB;
    private javax.swing.JTable grView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtEmployeeIDS;
    private javax.swing.JTextField txtEmployeeName;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel model;
    DefaultTableModel tbGrView;
    TableRowSorter<TableModel> sorter;
    _Account acc = new _Account();

    public void setAccount(_Account aa) {
        acc = aa;
    }

    private void initModel() {

        //khoi tao model lap trinh = model design duoc tao ra boi netbean
        model = (DefaultTableModel) grView.getModel();
        tbGrView = (DefaultTableModel) grView.getModel();
        sorter = (TableRowSorter<TableModel>) grView.getRowSorter();
        model.setRowCount(0);
        IEmployeeImpl ei = new IEmployeeImpl();
        for (Employee e : ei.getList()) {
            int iid = e.getEmployeeID();
            String name = e.getEmployeeName();
            Date dob = e.getDOB();
            String position = e.getPosition();
            String contact = e.getContact();
            Employee em = new Employee(iid, name, position, contact, dob, dob);
            model.addRow(em.toVector());
        }
    }

    boolean checkID(String eID) {
        Pattern p = Pattern.compile("^[0-9]{0,8}$");
        Matcher m = p.matcher(eID);
        boolean result = m.find();
        return result;
    }

    boolean checkName(String eName) {
        Pattern p = Pattern.compile("^(([A-Z \\s]+||[a-zA-Z \\s]+)[^_(0-9)]){0,30}$");
        Matcher m = p.matcher(eName);
        boolean result = m.find();
        return result;
    }

    boolean checkNamePlus(String eNamePlus) {
        Pattern p = Pattern.compile("^((?:\\w+\\s)*\\w+)+$");
        Matcher m = p.matcher(eNamePlus);
        boolean result = m.find();
        return result;
    }

    boolean checkContact(String eContact) {
        Pattern p = Pattern.compile("^[0-9]{10,20}$");
        Matcher m = p.matcher(eContact);
        boolean result = m.find();
        return result;
    }
}
