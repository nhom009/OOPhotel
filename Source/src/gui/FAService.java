/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import daoImpl.IDrinkImpl;
import daoImpl.IFoodImpl;
import daoImpl.I_ServicesImpl;
import entities.Drink;
import entities.Food;
import entities._Account;
import entities._Services;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ICHIGEKI
 */
public class FAService extends javax.swing.JFrame {

    /**
     * Creates new form FAService
     */
    boolean btnAStt = false;

    public FAService() {
        initComponents();
        initModels();
        btnStt();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        txtNameS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        cbbTypeS = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbbType = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        spPrice = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtaDes = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grView = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnSearch = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "TÌM DỊCH VỤ"));
        jPanel3.setPreferredSize(new java.awt.Dimension(612, 104));

        jLabel1.setText("TÊN");

        cbbTypeS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Services", "Foods", "Drinks" }));
        cbbTypeS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTypeSActionPerformed(evt);
            }
        });

        jLabel6.setText("LOẠI DV");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addGap(56, 56, 56)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cbbTypeS, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtNameS))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbbTypeS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNameS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(14, 14, 14))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "DỊCH VỤ"));
        jPanel4.setPreferredSize(new java.awt.Dimension(612, 219));

        jLabel2.setText("GIÁ");

        jLabel5.setText("LOẠI DV");

        cbbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DỊCH VỤ", "ĐỒ ĂN", "ĐỒ UỐNG" }));
        cbbType.setEnabled(false);
        cbbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbTypeActionPerformed(evt);
            }
        });

        jLabel7.setText("TÊN");

        txtName.setEnabled(false);

        spPrice.setModel(new javax.swing.SpinnerNumberModel(0, 0, 10000, 1));
        spPrice.setEnabled(false);

        jLabel3.setText("GHI CHÚ");

        txtaDes.setColumns(20);
        txtaDes.setRows(5);
        txtaDes.setEnabled(false);
        jScrollPane1.setViewportView(txtaDes);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName)
                    .addComponent(spPrice)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(cbbType, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(612, 169));

        grView.setAutoCreateRowSorter(true);
        grView.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TÊN DV", "GIÁ DV", "GHI CHÚ", "ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grView.getTableHeader().setReorderingAllowed(false);
        grView.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grViewMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(grView);
        if (grView.getColumnModel().getColumnCount() > 0) {
            grView.getColumnModel().getColumn(3).setMinWidth(0);
            grView.getColumnModel().getColumn(3).setPreferredWidth(0);
            grView.getColumnModel().getColumn(3).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(178, 208, 254));

        btnSearch.setBackground(new java.awt.Color(51, 153, 255));
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/btnSearch.png"))); // NOI18N
        btnSearch.setText("TÌM KIẾM");
        btnSearch.setPreferredSize(new java.awt.Dimension(90, 43));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(51, 153, 255));
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/btnAdd.png"))); // NOI18N
        btnAdd.setText("THÊM");
        btnAdd.setPreferredSize(new java.awt.Dimension(90, 43));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(51, 153, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/btnUpdate.png"))); // NOI18N
        btnUpdate.setText("SỬA");
        btnUpdate.setPreferredSize(new java.awt.Dimension(90, 43));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDel.setBackground(new java.awt.Color(51, 153, 255));
        btnDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/btnDelete.png"))); // NOI18N
        btnDel.setText("XÓA");
        btnDel.setEnabled(false);
        btnDel.setPreferredSize(new java.awt.Dimension(90, 43));
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(51, 153, 255));
        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/btnReset.png"))); // NOI18N
        btnReset.setText("CẬP NHẬT");
        btnReset.setPreferredSize(new java.awt.Dimension(90, 43));
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnBack.setBackground(new java.awt.Color(51, 153, 255));
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/btnBack.png"))); // NOI18N
        btnBack.setText("BACK");
        btnBack.setPreferredSize(new java.awt.Dimension(90, 43));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReset, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        String name = txtNameS.getText();
        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter name");
            txtNameS.requestFocus();
        } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(name).matches()) {
            JOptionPane.showMessageDialog(null, "Search name must be latin characters");
            txtNameS.requestFocus();
        } else {
            sorter.setRowFilter(RowFilter.regexFilter(name, 0));
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void grViewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grViewMouseClicked
        int i = grView.getSelectedRow();
        if (i > -1) {
            btnDel.setEnabled(true);
            btnUpdate.setEnabled(true);
            cbbType.setSelectedIndex(cbbTypeS.getSelectedIndex());
            txtName.setText(grView.getValueAt(i, 0).toString());
            spPrice.setValue(grView.getValueAt(i, 1));
            txtaDes.setText(grView.getValueAt(i, 2).toString());
            cbbType.setEnabled(false);
        } else {
            btnDel.setEnabled(false);
            btnUpdate.setEnabled(false);

        }
    }//GEN-LAST:event_grViewMouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtName.setText(null);
        txtNameS.setText(null);
        txtaDes.setText(null);
        spPrice.setValue(0);
        cbbType.setSelectedIndex(0);
        cbbType.setEnabled(true);
        cbbTypeS.setSelectedIndex(0);
        initModels();
        btnDel.setEnabled(false);
        btnUpdate.setEnabled(true);
        btnSearch.setEnabled(true);
        btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
        btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/btnAdd.png")));
        btnUpdate.setIcon(new ImageIcon(getClass().getResource("/image/btnUpdate.png")));
        btnAdd.setEnabled(true);
        cbbTypeS.setEnabled(true);
        txtNameS.setEnabled(true);
        cbbType.setEnabled(false);
        txtName.setEnabled(false);
        spPrice.setEnabled(false);
        txtaDes.setEnabled(false);
        grView.setEnabled(true);
    }//GEN-LAST:event_btnResetActionPerformed

    private void cbbTypeSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTypeSActionPerformed
        if (cbbTypeS.getSelectedIndex() == 0) {
            initModels();
        } else if (cbbTypeS.getSelectedIndex() == 1) {
            initModelf();
        } else if (cbbTypeS.getSelectedIndex() == 2) {
            initModeld();
        }
        cbbType.setSelectedIndex(cbbTypeS.getSelectedIndex());
    }//GEN-LAST:event_cbbTypeSActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        btnStt();
        if (btnAStt == false) {
            grView.clearSelection();
            txtName.setText(null);
            txtaDes.setText(null);
            spPrice.setValue(0);
            btnUpdate.setEnabled(false);
            btnDel.setEnabled(false);
            btnSearch.setEnabled(false);
            btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/btnSave.png")));
            btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnCancel.png")));
            sorter.setRowFilter(null);
            cbbTypeS.setEnabled(false);
            txtNameS.setEnabled(false);
            txtName.setEnabled(true);
            spPrice.setEnabled(true);
            txtaDes.setEnabled(true);
            cbbType.setEnabled(true);
            grView.setEnabled(false);
        } else {
            String name = txtName.getText();
            String des = txtaDes.getText();
            int price = (int) spPrice.getValue();
            if (cbbType.getSelectedIndex() == 0) {
                initModels();
                if (name.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter name");
                    txtName.requestFocus();
                } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(name).matches()) {
                    JOptionPane.showMessageDialog(null, "Name must be latin characters");
                    txtName.requestFocus();
                } else if (name.trim().length() > 30) {
                    JOptionPane.showMessageDialog(null, "Name no more than 30 characters");
                    txtName.requestFocus();
                } else if (price < 1) {
                    JOptionPane.showMessageDialog(null, "Price must be positive number");
                    spPrice.requestFocus();
                } else if (des.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter description");
                    txtaDes.requestFocus();
                } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(des).matches()) {
                    JOptionPane.showMessageDialog(null, "Description must be latin characters");
                    txtaDes.requestFocus();
                } else if (des.trim().length() > 200) {
                    JOptionPane.showMessageDialog(null, "Description no more than 200 characters");
                    txtaDes.requestFocus();
                } else {
                    _Services s = new _Services(0, price, name, des);
                    I_ServicesImpl i_s = new I_ServicesImpl();
                    if (i_s.insertTan(s)) {
                        model.addRow(s.toVector());
                        btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/btnAdd.png")));
                        btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
                        btnSearch.setEnabled(true);
                        cbbTypeS.setEnabled(true);
                        txtNameS.setEnabled(true);
                        grView.setEnabled(true);
                        txtName.setEnabled(false);
                        spPrice.setEnabled(false);
                        txtaDes.setEnabled(false);
                        cbbType.setEnabled(false);
                        btnUpdate.setEnabled(true);
                        JOptionPane.showMessageDialog(null, "Insert completed");
                    } else {
                        JOptionPane.showMessageDialog(null, "Insert failed");
                    }
                }
            }
            if (cbbType.getSelectedIndex() == 1) {
                initModelf();
                if (name.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter name");
                    txtName.requestFocus();
                } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(name).matches()) {
                    JOptionPane.showMessageDialog(null, "Name must be latin characters");
                    txtName.requestFocus();
                } else if (name.trim().length() > 30) {
                    JOptionPane.showMessageDialog(null, "Name no more than 30 characters");
                    txtName.requestFocus();
                } else if (price < 1) {
                    JOptionPane.showMessageDialog(null, "Price must be positive number");
                    spPrice.requestFocus();
                } else if (des.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter description");
                    txtaDes.requestFocus();
                } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(des).matches()) {
                    JOptionPane.showMessageDialog(null, "Description must be latin characters");
                    txtaDes.requestFocus();
                } else if (des.trim().length() > 200) {
                    JOptionPane.showMessageDialog(null, "Description no more than 200 characters");
                    txtaDes.requestFocus();
                } else {
                    Food f = new Food(0, price, name, des);
                    IFoodImpl ifi = new IFoodImpl();
                    if (ifi.insertTan(f)) {
                        model.addRow(f.toVector());
                        btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/btnAdd.png")));
                        btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
                        btnSearch.setEnabled(true);
                        cbbTypeS.setEnabled(true);
                        txtNameS.setEnabled(true);
                        grView.setEnabled(true);
                        txtName.setEnabled(false);
                        spPrice.setEnabled(false);
                        txtaDes.setEnabled(false);
                        cbbType.setEnabled(false);
                        btnUpdate.setEnabled(true);
                        JOptionPane.showMessageDialog(null, "Insert completed");
                    } else {
                        JOptionPane.showMessageDialog(null, "Insert failed");
                    }
                }
            }
            if (cbbType.getSelectedIndex() == 2) {
                initModeld();
                if (name.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter name");
                    txtName.requestFocus();
                } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(name).matches()) {
                    JOptionPane.showMessageDialog(null, "Name must be latin characters");
                    txtName.requestFocus();
                } else if (name.trim().length() > 30) {
                    JOptionPane.showMessageDialog(null, "Name no more than 30 characters");
                    txtName.requestFocus();
                } else if (price < 1) {
                    JOptionPane.showMessageDialog(null, "Price must be positive number");
                    spPrice.requestFocus();
                } else if (des.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please enter description");
                    txtaDes.requestFocus();
                } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(des).matches()) {
                    JOptionPane.showMessageDialog(null, "Description must be latin characters");
                    txtaDes.requestFocus();
                } else if (des.trim().length() > 200) {
                    JOptionPane.showMessageDialog(null, "Description no more than 200 characters");
                    txtaDes.requestFocus();
                } else {
                    Drink d = new Drink(0, price, name, des);
                    IDrinkImpl idi = new IDrinkImpl();
                    if (idi.insertTan(d)) {
                        model.addRow(d.toVector());
                        btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/btnAdd.png")));
                        btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
                        btnSearch.setEnabled(true);
                        cbbTypeS.setEnabled(true);
                        txtNameS.setEnabled(true);
                        grView.setEnabled(true);
                        txtName.setEnabled(false);
                        spPrice.setEnabled(false);
                        txtaDes.setEnabled(false);
                        cbbType.setEnabled(false);
                        btnUpdate.setEnabled(true);
                        JOptionPane.showMessageDialog(null, "Insert completed");
                    } else {
                        JOptionPane.showMessageDialog(null, "Insert failed");
                    }
                }
            }
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        btnStt();
        int i = grView.getSelectedRow();
        if (i > -1) {
            if (btnAStt == false) {
                btnAdd.setEnabled(false);
                btnDel.setEnabled(false);
                btnSearch.setEnabled(false);
                btnUpdate.setIcon(new ImageIcon(getClass().getResource("/image/btnSave.png")));
                btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnCancel.png")));
                sorter.setRowFilter(null);
                cbbTypeS.setEnabled(false);
                txtNameS.setEnabled(false);
                txtName.setEnabled(true);
                spPrice.setEnabled(true);
                txtaDes.setEnabled(true);
                cbbType.setEnabled(true);
            } else {
                String name = txtName.getText();
                String des = txtaDes.getText();
                int price = (int) spPrice.getValue();
                int id = (int) grView.getValueAt(i, 3);
                if (cbbTypeS.getSelectedIndex() == 0) {
                    if (name.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Please enter name");
                        txtName.requestFocus();
                    } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(name).matches()) {
                        JOptionPane.showMessageDialog(null, "Name must be latin characters");
                        txtName.requestFocus();
                    } else if (name.trim().length() > 30) {
                        JOptionPane.showMessageDialog(null, "Name no more than 30 characters");
                        txtName.requestFocus();
                    } else if (price < 1) {
                        JOptionPane.showMessageDialog(null, "Price must be positive number");
                        spPrice.requestFocus();
                    } else if (des.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Please enter description");
                        txtaDes.requestFocus();
                    } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(des).matches()) {
                        JOptionPane.showMessageDialog(null, "Description must be latin characters");
                        txtaDes.requestFocus();
                    } else if (des.trim().length() > 200) {
                        JOptionPane.showMessageDialog(null, "Description no more than 200 characters");
                        txtaDes.requestFocus();
                    } else {
                        _Services s = new _Services(id, price, name, des);
                        I_ServicesImpl i_s = new I_ServicesImpl();
                        if (i_s.updateTan(s)) {
                            model.setValueAt(name, i, 0);
                            model.setValueAt(price, i, 1);
                            model.setValueAt(des, i, 2);
                            initModels();
                            btnUpdate.setIcon(new ImageIcon(getClass().getResource("/image/btnUpdate.png")));
                            btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
                            btnSearch.setEnabled(true);
                            cbbTypeS.setEnabled(true);
                            txtNameS.setEnabled(true);
                            txtName.setEnabled(false);
                            spPrice.setEnabled(false);
                            txtaDes.setEnabled(false);
                            cbbType.setEnabled(false);
                            btnAdd.setEnabled(true);
                            JOptionPane.showMessageDialog(null, "Update completed");
                        } else {
                            JOptionPane.showMessageDialog(null, "Update failed");
                        }
                    }
                }
                if (cbbTypeS.getSelectedIndex() == 1) {
                    if (name.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Please enter name");
                        txtName.requestFocus();
                    } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(name).matches()) {
                        JOptionPane.showMessageDialog(null, "Name must be latin characters");
                        txtName.requestFocus();
                    } else if (name.trim().length() > 30) {
                        JOptionPane.showMessageDialog(null, "Name no more than 30 characters");
                        txtName.requestFocus();
                    } else if (price < 1) {
                        JOptionPane.showMessageDialog(null, "Price must be positive number");
                        spPrice.requestFocus();
                    } else if (des.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Please enter description");
                        txtaDes.requestFocus();
                    } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(des).matches()) {
                        JOptionPane.showMessageDialog(null, "Description must be latin characters");
                        txtaDes.requestFocus();
                    } else if (des.trim().length() > 200) {
                        JOptionPane.showMessageDialog(null, "Description no more than 200 characters");
                        txtaDes.requestFocus();
                    } else {
                        Food f = new Food(id, price, name, des);
                        IFoodImpl ifi = new IFoodImpl();
                        if (ifi.updateTan(f)) {
                            model.setValueAt(name, i, 0);
                            model.setValueAt(price, i, 1);
                            model.setValueAt(des, i, 2);
                            initModelf();
                            btnUpdate.setIcon(new ImageIcon(getClass().getResource("/image/btnUpdate.png")));
                            btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
                            btnSearch.setEnabled(true);
                            cbbTypeS.setEnabled(true);
                            txtNameS.setEnabled(true);
                            txtName.setEnabled(false);
                            spPrice.setEnabled(false);
                            txtaDes.setEnabled(false);
                            cbbType.setEnabled(false);
                            btnAdd.setEnabled(true);
                            JOptionPane.showMessageDialog(null, "Update completed");
                        } else {
                            JOptionPane.showMessageDialog(null, "Update failed");
                        }
                    }
                }
                if (cbbTypeS.getSelectedIndex() == 2) {
                    if (name.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Please enter name");
                        txtName.requestFocus();
                    } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(name).matches()) {
                        JOptionPane.showMessageDialog(null, "Name must be latin characters");
                        txtName.requestFocus();
                    } else if (name.trim().length() > 30) {
                        JOptionPane.showMessageDialog(null, "Name no more than 30 characters");
                        txtName.requestFocus();
                    } else if (price < 1) {
                        JOptionPane.showMessageDialog(null, "Price must be positive number");
                        spPrice.requestFocus();
                    } else if (des.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Please enter description");
                        txtaDes.requestFocus();
                    } else if (!Pattern.compile("[a-z ._]+", Pattern.CASE_INSENSITIVE).matcher(des).matches()) {
                        JOptionPane.showMessageDialog(null, "Description must be latin characters");
                        txtaDes.requestFocus();
                    } else if (des.trim().length() > 200) {
                        JOptionPane.showMessageDialog(null, "Description no more than 200 characters");
                        txtaDes.requestFocus();
                    } else {
                        Drink d = new Drink(id, price, name, des);
                        IDrinkImpl idi = new IDrinkImpl();
                        if (idi.updateTan(d)) {
                            model.setValueAt(name, i, 0);
                            model.setValueAt(price, i, 1);
                            model.setValueAt(des, i, 2);
                            initModeld();
                            btnUpdate.setIcon(new ImageIcon(getClass().getResource("/image/btnUpdate.png")));
                            btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
                            btnSearch.setEnabled(true);
                            cbbTypeS.setEnabled(true);
                            txtNameS.setEnabled(true);
                            txtName.setEnabled(false);
                            spPrice.setEnabled(false);
                            txtaDes.setEnabled(false);
                            cbbType.setEnabled(false);
                            btnAdd.setEnabled(true);
                            JOptionPane.showMessageDialog(null, "Update completed");
                        } else {
                            JOptionPane.showMessageDialog(null, "Update failed");
                        }
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Please choose row you wanna update");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        int i = grView.getSelectedRow();
        String id = String.valueOf(grView.getValueAt(i, 3));
        if (cbbType.getSelectedIndex() == 0) {
            I_ServicesImpl isi = new I_ServicesImpl();
            if (isi.deleteTan(id)) {
                model.removeRow(i);
                initModels();
                btnUpdate.setEnabled(false);
                btnDel.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Delete completed");
            } else {
                JOptionPane.showMessageDialog(null, "Delete completed");
            }
        }
        if (cbbType.getSelectedIndex() == 1) {
            IFoodImpl ifi = new IFoodImpl();
            if (ifi.deleteTan(id)) {
                model.removeRow(i);
                initModelf();
                btnUpdate.setEnabled(false);
                btnDel.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Delete completed");
            } else {
                JOptionPane.showMessageDialog(null, "Delete completed");
            }
        }
        if (cbbType.getSelectedIndex() == 2) {
            IDrinkImpl idi = new IDrinkImpl();
            if (idi.deleteTan(id)) {
                model.removeRow(i);
                initModeld();
                btnUpdate.setEnabled(false);
                btnDel.setEnabled(false);
                JOptionPane.showMessageDialog(null, "Delete completed");
            } else {
                JOptionPane.showMessageDialog(null, "Delete completed");
            }
        }
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        btnStt();
        if (btnAStt == true) {
            btnBack.setIcon(new ImageIcon(getClass().getResource("/image/btnBack.png")));
            btnAdd.setIcon(new ImageIcon(getClass().getResource("/image/btnAdd.png")));
            btnUpdate.setIcon(new ImageIcon(getClass().getResource("/image/btnUpdate.png")));
            grView.clearSelection();
            btnSearch.setEnabled(true);
            btnAdd.setEnabled(true);
            btnUpdate.setEnabled(true);
            cbbTypeS.setEnabled(true);
            txtNameS.setEnabled(true);
            grView.setEnabled(true);
            txtName.setEnabled(false);
            spPrice.setEnabled(false);
            txtaDes.setEnabled(false);
            cbbType.setEnabled(false);
        } else {
            GDAdmin fa = new GDAdmin();
            fa.setAccount(acc);
            fa.setLocationRelativeTo(this);
            fa.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void cbbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbTypeActionPerformed
        btnStt();
        if (btnAStt == true) {
            if (cbbType.getSelectedIndex() == 0) {
                initModels();
            } else if (cbbType.getSelectedIndex() == 1) {
                initModelf();
            } else if (cbbType.getSelectedIndex() == 2) {
                initModeld();
            }
        }
    }//GEN-LAST:event_cbbTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FAService().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbbType;
    private javax.swing.JComboBox cbbTypeS;
    private javax.swing.JTable grView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spPrice;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNameS;
    private javax.swing.JTextArea txtaDes;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel model;
    TableRowSorter<TableModel> sorter;
    _Account acc = new _Account();

    public void setAccount(_Account aa) {
        acc = aa;
    }

    private void initModels() {
        model = (DefaultTableModel) grView.getModel();
        sorter = (TableRowSorter<TableModel>) grView.getRowSorter();
        model.setRowCount(0);
        sorter.setRowFilter(null);
        I_ServicesImpl s = new I_ServicesImpl();
        for (_Services item1 : s.getListTan()) {
            model.addRow(item1.toVector());
        }
    }

    private void initModeld() {
        model = (DefaultTableModel) grView.getModel();
        sorter = (TableRowSorter<TableModel>) grView.getRowSorter();
        model.setRowCount(0);
        sorter.setRowFilter(null);
        IDrinkImpl d = new IDrinkImpl();
        for (Drink item3 : d.getListTan()) {
            model.addRow(item3.toVector());
        }
    }

    private void initModelf() {
        model = (DefaultTableModel) grView.getModel();
        sorter = (TableRowSorter<TableModel>) grView.getRowSorter();
        model.setRowCount(0);
        sorter.setRowFilter(null);
        IFoodImpl f = new IFoodImpl();
        for (Food item2 : f.getListTan()) {
            model.addRow(item2.toVector());
        }
    }

    private void btnStt() {
        if (btnSearch.isEnabled() == true) {
            btnAStt = false;
        } else {
            btnAStt = true;
        }
    }
//    private void report(){
//        try{
//        String s = "H:\\Java\\Project\\Hotel\\src\\report/List_Services.jrxml";
//        JasperReport jr = JasperCompileManager.compileReport(s);
//        HashMap map = new HashMap();
//            JasperPrint jp = JasperFillManager.fillReport(jr, map, MyLib.getCon());
//            JasperViewer jv = new JasperViewer(jp);
//        jv.setVisible(true);
//        }catch(Exception e){
//            e.printStackTrace();
//        }
//    }
}
