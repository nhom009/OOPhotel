package gui;

import daoImpl.IReceptionImpl;
import daoImpl.IReservationImpl;
import daoImpl.IRoomImpl;
import daoImpl.IRoomTypeImpl;
import entities.Reception;
import entities.Reservation;
import entities.Room;
import entities.RoomType;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author User
 */
public class ChonPhong extends javax.swing.JFrame {

    /**
     * Creates new form FSReception
     */
    public ChonPhong() {
        initComponents();
        initData();
//        ((JSpinner.DefaultEditor) spRooms.getEditor()).getTextField().setEditable(false);
        spRooms.setEnabled(false);
        btnAdd.setEnabled(false);
        btnRemove.setEnabled(false);
    }
    int max, count, from;
    public String form;
    ArrayList roomx;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbbRoomType = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grCus = new javax.swing.JTable();
        btnOk = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        spRooms = new javax.swing.JSpinner();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        grSelect = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtRoomS = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        dcsFrom = new com.toedter.calendar.JDateChooser();
        dcsTo = new com.toedter.calendar.JDateChooser();
        btnRemove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "CHỌN PHÒNG"));

        jLabel1.setForeground(new java.awt.Color(51, 51, 255));
        jLabel1.setText("TỪ NGÀY");

        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("ĐẾN NGÀY");

        jLabel3.setForeground(new java.awt.Color(51, 51, 255));
        jLabel3.setText("LOẠI PHÒNG");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "KHÁCH HÀNG"));

        grCus.setAutoCreateRowSorter(true);
        grCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PHÒNG", "LOẠI PHÒNG", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grCus.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(grCus);
        if (grCus.getColumnModel().getColumnCount() > 0) {
            grCus.getColumnModel().getColumn(2).setMinWidth(0);
            grCus.getColumnModel().getColumn(2).setPreferredWidth(0);
            grCus.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 363, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
        );

        btnOk.setText("OK");
        btnOk.setPreferredSize(new java.awt.Dimension(65, 23));
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnAdd.setText("THÊM");
        btnAdd.setPreferredSize(new java.awt.Dimension(65, 23));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Rooms");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)), "Selected", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N

        grSelect.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PHÒNG", "LOẠI PHÒNG", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grSelect.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(grSelect);
        if (grSelect.getColumnModel().getColumnCount() > 0) {
            grSelect.getColumnModel().getColumn(2).setMinWidth(0);
            grSelect.getColumnModel().getColumn(2).setPreferredWidth(0);
            grSelect.getColumnModel().getColumn(2).setMaxWidth(0);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 353, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 353, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
        );

        jLabel5.setForeground(new java.awt.Color(51, 51, 255));
        jLabel5.setText("PHÒNG");

        txtRoomS.setMaximumSize(new java.awt.Dimension(300, 20));

        btnSearch.setText("TÌM");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnCancel.setText("HỦY");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnRemove.setText("XÓA");
        btnRemove.setPreferredSize(new java.awt.Dimension(65, 23));
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtRoomS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbbRoomType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spRooms, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                            .addComponent(dcsTo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dcsFrom, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtRoomS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1))
                    .addComponent(dcsFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(dcsTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbRoomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spRooms, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel)
                    .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        if (grSelect.getRowCount() != 0) {
            if (form.equals("recep")) {
                if (from == 1) {
                    DatPhongNgay.it.tempRecep.setRoomID((int) grSelect.getValueAt(0, 2));
                }
                DatPhongNgay.it.tempRecep.setExpectedCheckoutDate(dcsTo.getDate());
                DatPhongNgay.it.fillData(DatPhongNgay.it.tempRecep);
                this.dispose();
            }
            if (form.equals("reser")) {
                if (from == 0) {
                    String s = String.valueOf(grSelect.getValueAt(0, 2));
                    for (int i = 1; i < grSelect.getRowCount(); i++) {
                        s = s + " " + grSelect.getValueAt(i, 2);
                    }
                    DatTruocP.it.tempRe.setExpectedRoom(s);
                    DatTruocP.it.tempRe.setRoomTypeID(getRoomTypeID(String.valueOf(grSelect.getValueAt(0, 1))));
                }
                DatTruocP.it.tempRe.setExpectedCheckinDate(dcsFrom.getDate());
                DatTruocP.it.tempRe.setExpectedCheckoutDate(dcsTo.getDate());
                DatTruocP.it.fillData(DatTruocP.it.tempRe);
                this.dispose();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Không thể gửi khi danh sách đã chọn trống.");
        }
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        Date from = dcsFrom.getDate();
        Date to = dcsTo.getDate();
        String no = txtRoomS.getText();
        System.out.println(from);
        System.out.println(to);
        String type = (String) cbbRoomType.getSelectedItem();
        roomx = new ArrayList<>();
        if (from == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một ngày hợp lệ");
            dcsFrom.setDate(null);
            return;
        }
        if (to == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một ngày hợp lệ");
            dcsTo.setDate(null);
            return;
        }
        if (from.before(new Date()) && form.equals("reser")) {
            JOptionPane.showMessageDialog(this, "Ngày chọn phải sau hôm nay.");
            dcsFrom.setDate(null);
            return;
        }
        if (from.after(to)) {
            JOptionPane.showMessageDialog(this, "Lỗi ngày");
            dcsFrom.setDate(null);
            dcsTo.setDate(null);
            return;
        }
        for (Reception r : new IReceptionImpl().getList()) {
            if (r.getCheckoutDate() == null) {
                roomx.add(RowFilter.notFilter(RowFilter.regexFilter(getRoomN(String.valueOf(r.getRoomID())), 0)));
            }else
            if (r.getCheckoutDate().after(from)) {
                roomx.add(RowFilter.notFilter(RowFilter.regexFilter(getRoomN(String.valueOf(r.getRoomID())), 0)));
            }
        }
        for (Reservation rs : new IReservationImpl().getList()) {
            if ((rs.getExpectedCheckinDate().after(from) && rs.getExpectedCheckinDate().before(to))
                    || (rs.getExpectedCheckoutDate().after(from) && rs.getExpectedCheckoutDate().before(to))) {
                if (rs.getExpectedRoom().length() == 1) {
                    roomx.add(RowFilter.notFilter(RowFilter.regexFilter(getRoomN(String.valueOf(rs.getExpectedRoom())), 0)));
                } else {
                    for (String s : rs.getExpectedRoom().split(" ")) {
                        roomx.add(RowFilter.notFilter(RowFilter.regexFilter(getRoomN(s), 0)));
                    }
                }
            }
        }
        if (no.trim().length() != 0) {
            if (!Pattern.compile("\\d+", Pattern.CASE_INSENSITIVE).matcher(no).matches()) {
                JOptionPane.showMessageDialog(null, "Số phòng phải là chữ số");
                txtRoomS.requestFocus();
                return;
            }
            roomx.add(RowFilter.regexFilter(no, 0));
        }
        roomx.add(RowFilter.regexFilter(type, 1));
        rs.setRowFilter(RowFilter.andFilter(roomx));
        if (rs.getViewRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Không có phòng ");
        }
        btnAdd.setEnabled(true);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if (count < max) {
            if (grCus.getSelectedRow() == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một phòng trước khi thêm.");
                return;
            }
            for (int i = 0; i < grSelect.getRowCount(); i++) {
                if (grCus.getValueAt(grCus.getSelectedRow(), 0) == grSelect.getValueAt(i, 0)) {
                    JOptionPane.showMessageDialog(this, "Không thể thêm phòng");
                    return;
                }
            }
            Vector v = new Vector();
            v.add(grCus.getValueAt(grCus.getSelectedRow(), 0));
            v.add(grCus.getValueAt(grCus.getSelectedRow(), 1));
            v.add(grCus.getValueAt(grCus.getSelectedRow(), 2));
            model2.addRow(v);
            for (int i = 0; i < model1.getRowCount(); i++) {
                if (model1.getValueAt(i, 0) == v.get(0)) {
                    model1.removeRow(i);
                }
            }
            btnRemove.setEnabled(true);
            if (grCus.getRowCount() == 0) {
                btnAdd.setEnabled(false);
            }
            spRooms.setValue(++count);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        if (grSelect.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một phòng trước khi gỡ bỏ.");
            return;
        }
        Vector v = new Vector();
        v.add(grSelect.getValueAt(grSelect.getSelectedRow(), 0));
        v.add(grSelect.getValueAt(grSelect.getSelectedRow(), 1));
        v.add(grSelect.getValueAt(grSelect.getSelectedRow(), 2));
        model1.addRow(v);
        model2.removeRow(grSelect.getSelectedRow());
        btnAdd.setEnabled(true);
        if (grSelect.getRowCount() == 0) {
            btnRemove.setEnabled(false);
        }
        spRooms.setValue(--count);
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChonPhong().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cbbRoomType;
    private com.toedter.calendar.JDateChooser dcsFrom;
    private com.toedter.calendar.JDateChooser dcsTo;
    private javax.swing.JTable grCus;
    private javax.swing.JTable grSelect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner spRooms;
    private javax.swing.JTextField txtRoomS;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel model1;
    DefaultTableModel model2;
    TableRowSorter<TableModel> rs;

    public void initData() {
        for (RoomType o : new IRoomTypeImpl().getList()) {
            cbbRoomType.addItem(o.getRoomTypeName());
        }
        model1 = (DefaultTableModel) grCus.getModel();
        model2 = (DefaultTableModel) grSelect.getModel();
        for (Vector v : new IRoomImpl().listFSSlRoom()) {
            model1.addRow(v);
        }
        rs = (TableRowSorter<TableModel>) grCus.getRowSorter();
        count = 0;
    }

    public String getRoomN(String s) {
        for (Room r : new IRoomImpl().getList()) {
            if (r.getRoomID() == Integer.parseInt(s)) {
                return String.valueOf(r.getRoomNumber());
            }
        }
        return null;
    }

    public int getRoomTypeID(String a) {
        for (RoomType e : new IRoomTypeImpl().getList()) {
            if (e.getRoomTypeName().equals(a)) {
                return e.getRoomTypeID();
            }
        }
        return -1;
    }

    public void setMax(int i) {
        this.max = i;
    }

    public void setFrom(int i, String j) {
        form = j;
        if (j.equals("recep")) {
            dcsFrom.setEnabled(false);
        }
        from = i;
    }

    public void setDatex(Date a, Date b) {
        dcsFrom.setDate(a);
        dcsTo.setDate(b);
    }
}